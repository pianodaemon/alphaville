// source: patio_vouchers.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.dylk.patio.Item', null, global);
goog.exportSymbol('proto.dylk.patio.PatioVoucher', null, global);
goog.exportSymbol('proto.dylk.patio.PatioVoucherGeneralResponse', null, global);
goog.exportSymbol('proto.dylk.patio.PatioVoucherId', null, global);
goog.exportSymbol('proto.dylk.patio.PatioVoucherListResponse', null, global);
goog.exportSymbol('proto.dylk.patio.PatioVoucherParam', null, global);
goog.exportSymbol('proto.dylk.patio.PatioVoucherParams', null, global);
goog.exportSymbol('proto.dylk.patio.PatioVoucherResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dylk.patio.Item = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dylk.patio.Item, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dylk.patio.Item.displayName = 'proto.dylk.patio.Item';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dylk.patio.PatioVoucher = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dylk.patio.PatioVoucher.repeatedFields_, null);
};
goog.inherits(proto.dylk.patio.PatioVoucher, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dylk.patio.PatioVoucher.displayName = 'proto.dylk.patio.PatioVoucher';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dylk.patio.PatioVoucherId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dylk.patio.PatioVoucherId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dylk.patio.PatioVoucherId.displayName = 'proto.dylk.patio.PatioVoucherId';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dylk.patio.PatioVoucherParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dylk.patio.PatioVoucherParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dylk.patio.PatioVoucherParam.displayName = 'proto.dylk.patio.PatioVoucherParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dylk.patio.PatioVoucherParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dylk.patio.PatioVoucherParams.repeatedFields_, null);
};
goog.inherits(proto.dylk.patio.PatioVoucherParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dylk.patio.PatioVoucherParams.displayName = 'proto.dylk.patio.PatioVoucherParams';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dylk.patio.PatioVoucherResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dylk.patio.PatioVoucherResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dylk.patio.PatioVoucherResponse.displayName = 'proto.dylk.patio.PatioVoucherResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dylk.patio.PatioVoucherListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dylk.patio.PatioVoucherListResponse.repeatedFields_, null);
};
goog.inherits(proto.dylk.patio.PatioVoucherListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dylk.patio.PatioVoucherListResponse.displayName = 'proto.dylk.patio.PatioVoucherListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dylk.patio.PatioVoucherGeneralResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dylk.patio.PatioVoucherGeneralResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dylk.patio.PatioVoucherGeneralResponse.displayName = 'proto.dylk.patio.PatioVoucherGeneralResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dylk.patio.Item.prototype.toObject = function(opt_includeInstance) {
  return proto.dylk.patio.Item.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dylk.patio.Item} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.patio.Item.toObject = function(includeInstance, msg) {
  var f, obj = {
    equipmentcode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    quantity: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dylk.patio.Item}
 */
proto.dylk.patio.Item.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dylk.patio.Item;
  return proto.dylk.patio.Item.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dylk.patio.Item} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dylk.patio.Item}
 */
proto.dylk.patio.Item.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEquipmentcode(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dylk.patio.Item.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dylk.patio.Item.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dylk.patio.Item} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.patio.Item.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEquipmentcode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuantity();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string equipmentCode = 1;
 * @return {string}
 */
proto.dylk.patio.Item.prototype.getEquipmentcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.patio.Item} returns this
 */
proto.dylk.patio.Item.prototype.setEquipmentcode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 quantity = 2;
 * @return {number}
 */
proto.dylk.patio.Item.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.dylk.patio.Item} returns this
 */
proto.dylk.patio.Item.prototype.setQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dylk.patio.PatioVoucher.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dylk.patio.PatioVoucher.prototype.toObject = function(opt_includeInstance) {
  return proto.dylk.patio.PatioVoucher.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dylk.patio.PatioVoucher} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.patio.PatioVoucher.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    voucherid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    patiocode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    observations: jspb.Message.getFieldWithDefault(msg, 4, ""),
    deliveredby: jspb.Message.getFieldWithDefault(msg, 5, ""),
    receivedby: jspb.Message.getFieldWithDefault(msg, 6, ""),
    status: jspb.Message.getFieldWithDefault(msg, 7, ""),
    itemlistList: jspb.Message.toObjectList(msg.getItemlistList(),
    proto.dylk.patio.Item.toObject, includeInstance),
    generationtime: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    lasttouchtime: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dylk.patio.PatioVoucher}
 */
proto.dylk.patio.PatioVoucher.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dylk.patio.PatioVoucher;
  return proto.dylk.patio.PatioVoucher.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dylk.patio.PatioVoucher} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dylk.patio.PatioVoucher}
 */
proto.dylk.patio.PatioVoucher.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVoucherid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPatiocode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setObservations(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeliveredby(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceivedby(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 8:
      var value = new proto.dylk.patio.Item;
      reader.readMessage(value,proto.dylk.patio.Item.deserializeBinaryFromReader);
      msg.addItemlist(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setGenerationtime(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLasttouchtime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dylk.patio.PatioVoucher.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dylk.patio.PatioVoucher.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dylk.patio.PatioVoucher} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.patio.PatioVoucher.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getVoucherid();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPatiocode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getObservations();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDeliveredby();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getReceivedby();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getItemlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.dylk.patio.Item.serializeBinaryToWriter
    );
  }
  f = message.getGenerationtime();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getLasttouchtime();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dylk.patio.PatioVoucher.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dylk.patio.PatioVoucher} returns this
 */
proto.dylk.patio.PatioVoucher.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 voucherId = 2;
 * @return {number}
 */
proto.dylk.patio.PatioVoucher.prototype.getVoucherid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.dylk.patio.PatioVoucher} returns this
 */
proto.dylk.patio.PatioVoucher.prototype.setVoucherid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string patioCode = 3;
 * @return {string}
 */
proto.dylk.patio.PatioVoucher.prototype.getPatiocode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.patio.PatioVoucher} returns this
 */
proto.dylk.patio.PatioVoucher.prototype.setPatiocode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string observations = 4;
 * @return {string}
 */
proto.dylk.patio.PatioVoucher.prototype.getObservations = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.patio.PatioVoucher} returns this
 */
proto.dylk.patio.PatioVoucher.prototype.setObservations = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string deliveredBy = 5;
 * @return {string}
 */
proto.dylk.patio.PatioVoucher.prototype.getDeliveredby = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.patio.PatioVoucher} returns this
 */
proto.dylk.patio.PatioVoucher.prototype.setDeliveredby = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string receivedBy = 6;
 * @return {string}
 */
proto.dylk.patio.PatioVoucher.prototype.getReceivedby = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.patio.PatioVoucher} returns this
 */
proto.dylk.patio.PatioVoucher.prototype.setReceivedby = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string status = 7;
 * @return {string}
 */
proto.dylk.patio.PatioVoucher.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.patio.PatioVoucher} returns this
 */
proto.dylk.patio.PatioVoucher.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated Item itemList = 8;
 * @return {!Array<!proto.dylk.patio.Item>}
 */
proto.dylk.patio.PatioVoucher.prototype.getItemlistList = function() {
  return /** @type{!Array<!proto.dylk.patio.Item>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dylk.patio.Item, 8));
};


/**
 * @param {!Array<!proto.dylk.patio.Item>} value
 * @return {!proto.dylk.patio.PatioVoucher} returns this
*/
proto.dylk.patio.PatioVoucher.prototype.setItemlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.dylk.patio.Item=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dylk.patio.Item}
 */
proto.dylk.patio.PatioVoucher.prototype.addItemlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.dylk.patio.Item, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dylk.patio.PatioVoucher} returns this
 */
proto.dylk.patio.PatioVoucher.prototype.clearItemlistList = function() {
  return this.setItemlistList([]);
};


/**
 * optional double generationTime = 9;
 * @return {number}
 */
proto.dylk.patio.PatioVoucher.prototype.getGenerationtime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.dylk.patio.PatioVoucher} returns this
 */
proto.dylk.patio.PatioVoucher.prototype.setGenerationtime = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional double lastTouchTime = 10;
 * @return {number}
 */
proto.dylk.patio.PatioVoucher.prototype.getLasttouchtime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.dylk.patio.PatioVoucher} returns this
 */
proto.dylk.patio.PatioVoucher.prototype.setLasttouchtime = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dylk.patio.PatioVoucherId.prototype.toObject = function(opt_includeInstance) {
  return proto.dylk.patio.PatioVoucherId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dylk.patio.PatioVoucherId} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.patio.PatioVoucherId.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dylk.patio.PatioVoucherId}
 */
proto.dylk.patio.PatioVoucherId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dylk.patio.PatioVoucherId;
  return proto.dylk.patio.PatioVoucherId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dylk.patio.PatioVoucherId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dylk.patio.PatioVoucherId}
 */
proto.dylk.patio.PatioVoucherId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dylk.patio.PatioVoucherId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dylk.patio.PatioVoucherId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dylk.patio.PatioVoucherId} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.patio.PatioVoucherId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dylk.patio.PatioVoucherId.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dylk.patio.PatioVoucherId} returns this
 */
proto.dylk.patio.PatioVoucherId.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dylk.patio.PatioVoucherParam.prototype.toObject = function(opt_includeInstance) {
  return proto.dylk.patio.PatioVoucherParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dylk.patio.PatioVoucherParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.patio.PatioVoucherParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dylk.patio.PatioVoucherParam}
 */
proto.dylk.patio.PatioVoucherParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dylk.patio.PatioVoucherParam;
  return proto.dylk.patio.PatioVoucherParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dylk.patio.PatioVoucherParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dylk.patio.PatioVoucherParam}
 */
proto.dylk.patio.PatioVoucherParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dylk.patio.PatioVoucherParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dylk.patio.PatioVoucherParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dylk.patio.PatioVoucherParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.patio.PatioVoucherParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.dylk.patio.PatioVoucherParam.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.patio.PatioVoucherParam} returns this
 */
proto.dylk.patio.PatioVoucherParam.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.dylk.patio.PatioVoucherParam.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.patio.PatioVoucherParam} returns this
 */
proto.dylk.patio.PatioVoucherParam.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dylk.patio.PatioVoucherParams.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dylk.patio.PatioVoucherParams.prototype.toObject = function(opt_includeInstance) {
  return proto.dylk.patio.PatioVoucherParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dylk.patio.PatioVoucherParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.patio.PatioVoucherParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    paramlistList: jspb.Message.toObjectList(msg.getParamlistList(),
    proto.dylk.patio.PatioVoucherParam.toObject, includeInstance),
    pageparamlistList: jspb.Message.toObjectList(msg.getPageparamlistList(),
    proto.dylk.patio.PatioVoucherParam.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dylk.patio.PatioVoucherParams}
 */
proto.dylk.patio.PatioVoucherParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dylk.patio.PatioVoucherParams;
  return proto.dylk.patio.PatioVoucherParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dylk.patio.PatioVoucherParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dylk.patio.PatioVoucherParams}
 */
proto.dylk.patio.PatioVoucherParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.dylk.patio.PatioVoucherParam;
      reader.readMessage(value,proto.dylk.patio.PatioVoucherParam.deserializeBinaryFromReader);
      msg.addParamlist(value);
      break;
    case 2:
      var value = new proto.dylk.patio.PatioVoucherParam;
      reader.readMessage(value,proto.dylk.patio.PatioVoucherParam.deserializeBinaryFromReader);
      msg.addPageparamlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dylk.patio.PatioVoucherParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dylk.patio.PatioVoucherParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dylk.patio.PatioVoucherParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.patio.PatioVoucherParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParamlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.dylk.patio.PatioVoucherParam.serializeBinaryToWriter
    );
  }
  f = message.getPageparamlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.dylk.patio.PatioVoucherParam.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PatioVoucherParam paramList = 1;
 * @return {!Array<!proto.dylk.patio.PatioVoucherParam>}
 */
proto.dylk.patio.PatioVoucherParams.prototype.getParamlistList = function() {
  return /** @type{!Array<!proto.dylk.patio.PatioVoucherParam>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dylk.patio.PatioVoucherParam, 1));
};


/**
 * @param {!Array<!proto.dylk.patio.PatioVoucherParam>} value
 * @return {!proto.dylk.patio.PatioVoucherParams} returns this
*/
proto.dylk.patio.PatioVoucherParams.prototype.setParamlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.dylk.patio.PatioVoucherParam=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dylk.patio.PatioVoucherParam}
 */
proto.dylk.patio.PatioVoucherParams.prototype.addParamlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.dylk.patio.PatioVoucherParam, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dylk.patio.PatioVoucherParams} returns this
 */
proto.dylk.patio.PatioVoucherParams.prototype.clearParamlistList = function() {
  return this.setParamlistList([]);
};


/**
 * repeated PatioVoucherParam pageParamList = 2;
 * @return {!Array<!proto.dylk.patio.PatioVoucherParam>}
 */
proto.dylk.patio.PatioVoucherParams.prototype.getPageparamlistList = function() {
  return /** @type{!Array<!proto.dylk.patio.PatioVoucherParam>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dylk.patio.PatioVoucherParam, 2));
};


/**
 * @param {!Array<!proto.dylk.patio.PatioVoucherParam>} value
 * @return {!proto.dylk.patio.PatioVoucherParams} returns this
*/
proto.dylk.patio.PatioVoucherParams.prototype.setPageparamlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.dylk.patio.PatioVoucherParam=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dylk.patio.PatioVoucherParam}
 */
proto.dylk.patio.PatioVoucherParams.prototype.addPageparamlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.dylk.patio.PatioVoucherParam, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dylk.patio.PatioVoucherParams} returns this
 */
proto.dylk.patio.PatioVoucherParams.prototype.clearPageparamlistList = function() {
  return this.setPageparamlistList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dylk.patio.PatioVoucherResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.dylk.patio.PatioVoucherResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dylk.patio.PatioVoucherResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.patio.PatioVoucherResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    returncode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    returnmessage: jspb.Message.getFieldWithDefault(msg, 2, ""),
    patiovoucher: (f = msg.getPatiovoucher()) && proto.dylk.patio.PatioVoucher.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dylk.patio.PatioVoucherResponse}
 */
proto.dylk.patio.PatioVoucherResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dylk.patio.PatioVoucherResponse;
  return proto.dylk.patio.PatioVoucherResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dylk.patio.PatioVoucherResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dylk.patio.PatioVoucherResponse}
 */
proto.dylk.patio.PatioVoucherResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReturncode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReturnmessage(value);
      break;
    case 3:
      var value = new proto.dylk.patio.PatioVoucher;
      reader.readMessage(value,proto.dylk.patio.PatioVoucher.deserializeBinaryFromReader);
      msg.setPatiovoucher(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dylk.patio.PatioVoucherResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dylk.patio.PatioVoucherResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dylk.patio.PatioVoucherResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.patio.PatioVoucherResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReturncode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getReturnmessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPatiovoucher();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.dylk.patio.PatioVoucher.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 returnCode = 1;
 * @return {number}
 */
proto.dylk.patio.PatioVoucherResponse.prototype.getReturncode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dylk.patio.PatioVoucherResponse} returns this
 */
proto.dylk.patio.PatioVoucherResponse.prototype.setReturncode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string returnMessage = 2;
 * @return {string}
 */
proto.dylk.patio.PatioVoucherResponse.prototype.getReturnmessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.patio.PatioVoucherResponse} returns this
 */
proto.dylk.patio.PatioVoucherResponse.prototype.setReturnmessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional PatioVoucher patioVoucher = 3;
 * @return {?proto.dylk.patio.PatioVoucher}
 */
proto.dylk.patio.PatioVoucherResponse.prototype.getPatiovoucher = function() {
  return /** @type{?proto.dylk.patio.PatioVoucher} */ (
    jspb.Message.getWrapperField(this, proto.dylk.patio.PatioVoucher, 3));
};


/**
 * @param {?proto.dylk.patio.PatioVoucher|undefined} value
 * @return {!proto.dylk.patio.PatioVoucherResponse} returns this
*/
proto.dylk.patio.PatioVoucherResponse.prototype.setPatiovoucher = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dylk.patio.PatioVoucherResponse} returns this
 */
proto.dylk.patio.PatioVoucherResponse.prototype.clearPatiovoucher = function() {
  return this.setPatiovoucher(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dylk.patio.PatioVoucherResponse.prototype.hasPatiovoucher = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dylk.patio.PatioVoucherListResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dylk.patio.PatioVoucherListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.dylk.patio.PatioVoucherListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dylk.patio.PatioVoucherListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.patio.PatioVoucherListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    returncode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    returnmessage: jspb.Message.getFieldWithDefault(msg, 2, ""),
    patiovoucherlistList: jspb.Message.toObjectList(msg.getPatiovoucherlistList(),
    proto.dylk.patio.PatioVoucher.toObject, includeInstance),
    totalitems: jspb.Message.getFieldWithDefault(msg, 4, 0),
    totalpages: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dylk.patio.PatioVoucherListResponse}
 */
proto.dylk.patio.PatioVoucherListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dylk.patio.PatioVoucherListResponse;
  return proto.dylk.patio.PatioVoucherListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dylk.patio.PatioVoucherListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dylk.patio.PatioVoucherListResponse}
 */
proto.dylk.patio.PatioVoucherListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReturncode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReturnmessage(value);
      break;
    case 3:
      var value = new proto.dylk.patio.PatioVoucher;
      reader.readMessage(value,proto.dylk.patio.PatioVoucher.deserializeBinaryFromReader);
      msg.addPatiovoucherlist(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalitems(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalpages(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dylk.patio.PatioVoucherListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dylk.patio.PatioVoucherListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dylk.patio.PatioVoucherListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.patio.PatioVoucherListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReturncode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getReturnmessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPatiovoucherlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.dylk.patio.PatioVoucher.serializeBinaryToWriter
    );
  }
  f = message.getTotalitems();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getTotalpages();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional int32 returnCode = 1;
 * @return {number}
 */
proto.dylk.patio.PatioVoucherListResponse.prototype.getReturncode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dylk.patio.PatioVoucherListResponse} returns this
 */
proto.dylk.patio.PatioVoucherListResponse.prototype.setReturncode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string returnMessage = 2;
 * @return {string}
 */
proto.dylk.patio.PatioVoucherListResponse.prototype.getReturnmessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.patio.PatioVoucherListResponse} returns this
 */
proto.dylk.patio.PatioVoucherListResponse.prototype.setReturnmessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated PatioVoucher patioVoucherList = 3;
 * @return {!Array<!proto.dylk.patio.PatioVoucher>}
 */
proto.dylk.patio.PatioVoucherListResponse.prototype.getPatiovoucherlistList = function() {
  return /** @type{!Array<!proto.dylk.patio.PatioVoucher>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dylk.patio.PatioVoucher, 3));
};


/**
 * @param {!Array<!proto.dylk.patio.PatioVoucher>} value
 * @return {!proto.dylk.patio.PatioVoucherListResponse} returns this
*/
proto.dylk.patio.PatioVoucherListResponse.prototype.setPatiovoucherlistList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.dylk.patio.PatioVoucher=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dylk.patio.PatioVoucher}
 */
proto.dylk.patio.PatioVoucherListResponse.prototype.addPatiovoucherlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.dylk.patio.PatioVoucher, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dylk.patio.PatioVoucherListResponse} returns this
 */
proto.dylk.patio.PatioVoucherListResponse.prototype.clearPatiovoucherlistList = function() {
  return this.setPatiovoucherlistList([]);
};


/**
 * optional int32 totalItems = 4;
 * @return {number}
 */
proto.dylk.patio.PatioVoucherListResponse.prototype.getTotalitems = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.dylk.patio.PatioVoucherListResponse} returns this
 */
proto.dylk.patio.PatioVoucherListResponse.prototype.setTotalitems = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 totalPages = 5;
 * @return {number}
 */
proto.dylk.patio.PatioVoucherListResponse.prototype.getTotalpages = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.dylk.patio.PatioVoucherListResponse} returns this
 */
proto.dylk.patio.PatioVoucherListResponse.prototype.setTotalpages = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dylk.patio.PatioVoucherGeneralResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.dylk.patio.PatioVoucherGeneralResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dylk.patio.PatioVoucherGeneralResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.patio.PatioVoucherGeneralResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    returncode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    returnmessage: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dylk.patio.PatioVoucherGeneralResponse}
 */
proto.dylk.patio.PatioVoucherGeneralResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dylk.patio.PatioVoucherGeneralResponse;
  return proto.dylk.patio.PatioVoucherGeneralResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dylk.patio.PatioVoucherGeneralResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dylk.patio.PatioVoucherGeneralResponse}
 */
proto.dylk.patio.PatioVoucherGeneralResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReturncode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReturnmessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dylk.patio.PatioVoucherGeneralResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dylk.patio.PatioVoucherGeneralResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dylk.patio.PatioVoucherGeneralResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dylk.patio.PatioVoucherGeneralResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReturncode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getReturnmessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 returnCode = 1;
 * @return {number}
 */
proto.dylk.patio.PatioVoucherGeneralResponse.prototype.getReturncode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dylk.patio.PatioVoucherGeneralResponse} returns this
 */
proto.dylk.patio.PatioVoucherGeneralResponse.prototype.setReturncode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string returnMessage = 2;
 * @return {string}
 */
proto.dylk.patio.PatioVoucherGeneralResponse.prototype.getReturnmessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dylk.patio.PatioVoucherGeneralResponse} returns this
 */
proto.dylk.patio.PatioVoucherGeneralResponse.prototype.setReturnmessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.dylk.patio);
